on:
  push:
    branches: [main]
  workflow_dispatch: {}

name: Build

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            container: rockylinux:8
            nodejs_arch: x64
            nodejs_version: "^18.20.5"
            nodejs_version_major: 18
            platform: linux-x64
          - os: ubuntu-22.04
            container: node:18-alpine3.17
            nodejs_version_major: 18
            platform: linuxmusl-x64
          - os: ubuntu-22.04-arm
            container: rockylinux:8
            nodejs_arch: arm64
            nodejs_version: "^18.20.5"
            nodejs_version_major: 18
            platform: linux-arm64
          - os: ubuntu-22.04-arm
            container: node:18-alpine3.17
            nodejs_version_major: 18
            platform: linuxmusl-arm64
          - os: macos-13
            nodejs_arch: x64
            nodejs_version: "^18.20.5"
            nodejs_version_major: 18
            platform: darwin-x64
          - os: macos-14
            nodejs_arch: arm64
            nodejs_version: "^18.20.5"
            nodejs_version_major: 18
            platform: darwin-arm64
          - os: windows-2019
            nodejs_arch: x64
            nodejs_version: "^18.20.5"
            nodejs_version_major: 18
            platform: win32-x64
      fail-fast: false
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Dependencies (Rocky Linux glibc)
        if: contains(matrix.container, 'rockylinux')
        run: |
          dnf install -y gcc-toolset-11-gcc-c++ make git python3.12 fontconfig google-noto-sans-fonts
          echo "/opt/rh/gcc-toolset-11/root/usr/bin" >> $GITHUB_PATH
      - name: Dependencies (Linux musl)
        if: contains(matrix.container, 'alpine')
        run: apk add build-base git python3 font-noto --update-cache
      - name: Dependencies (Python 3.11 - macOS, Windows)
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Dependencies (Node.js)
        if: "!contains(matrix.platform, 'linuxmusl')"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}
          architecture: ${{ matrix.nodejs_arch }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install
        run: |
          corepack enable yarn
          yarn install
      - name: Prebuild
        run: yarn prebuild

      - id: upload
        name: Upload prebuild
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: prebuilds/
          if-no-files-found: "error"
          retention-days: 1
          compression-level: 0
